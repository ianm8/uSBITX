#ifndef FILTERS_H
#define FILTERS_H

#include "util.h"

#define MOVING_AVERAGE_LENGTH 16u
#define JNR_FILTER_LENGTH 8u
#define FIR_LENGTH 256
#define __mac_tap(_h) acc += (_h)*x[i++]
#define __mac_zap(_h) i++

namespace FILTER
{
  static const int16_t __not_in_flash_func(bpf_fs4_cw)(const int16_t sample)
  {
    // 31250, 60dB, 400Hz, 201 taps
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(4);
    __mac_tap(0);
    __mac_tap(-5);
    __mac_tap(0);
    __mac_tap(6);
    __mac_tap(0);
    __mac_tap(-7);
    __mac_tap(0);
    __mac_tap(7);
    __mac_tap(0);
    __mac_tap(-7);
    __mac_tap(0);
    __mac_tap(7);
    __mac_tap(0);
    __mac_tap(-6);
    __mac_tap(0);
    __mac_tap(5);
    __mac_tap(0);
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(0);
    __mac_tap(0);
    __mac_tap(4);
    __mac_tap(0);
    __mac_tap(-9);
    __mac_tap(0);
    __mac_tap(15);
    __mac_tap(0);
    __mac_tap(-23);
    __mac_tap(0);
    __mac_tap(32);
    __mac_tap(0);
    __mac_tap(-42);
    __mac_tap(0);
    __mac_tap(54);
    __mac_tap(0);
    __mac_tap(-68);
    __mac_tap(0);
    __mac_tap(84);
    __mac_tap(0);
    __mac_tap(-102);
    __mac_tap(0);
    __mac_tap(121);
    __mac_tap(0);
    __mac_tap(-143);
    __mac_tap(0);
    __mac_tap(166);
    __mac_tap(0);
    __mac_tap(-191);
    __mac_tap(0);
    __mac_tap(218);
    __mac_tap(0);
    __mac_tap(-246);
    __mac_tap(0);
    __mac_tap(276);
    __mac_tap(0);
    __mac_tap(-308);
    __mac_tap(0);
    __mac_tap(340);
    __mac_tap(0);
    __mac_tap(-374);
    __mac_tap(0);
    __mac_tap(408);
    __mac_tap(0);
    __mac_tap(-443);
    __mac_tap(0);
    __mac_tap(478);
    __mac_tap(0);
    __mac_tap(-513);
    __mac_tap(0);
    __mac_tap(548);
    __mac_tap(0);
    __mac_tap(-582);
    __mac_tap(0);
    __mac_tap(615);
    __mac_tap(0);
    __mac_tap(-647);
    __mac_tap(0);
    __mac_tap(678);
    __mac_tap(0);
    __mac_tap(-706);
    __mac_tap(0);
    __mac_tap(732);
    __mac_tap(0);
    __mac_tap(-756);
    __mac_tap(0);
    __mac_tap(777);
    __mac_tap(0);
    __mac_tap(-796);
    __mac_tap(0);
    __mac_tap(811);
    __mac_tap(0);
    __mac_tap(-823);
    __mac_tap(0);
    __mac_tap(832);
    __mac_tap(0);
    __mac_tap(-837);
    __mac_tap(0);
    __mac_tap(839);
    __mac_tap(0);
    __mac_tap(-837);
    __mac_tap(0);
    __mac_tap(832);
    __mac_tap(0);
    __mac_tap(-823);
    __mac_tap(0);
    __mac_tap(811);
    __mac_tap(0);
    __mac_tap(-796);
    __mac_tap(0);
    __mac_tap(777);
    __mac_tap(0);
    __mac_tap(-756);
    __mac_tap(0);
    __mac_tap(732);
    __mac_tap(0);
    __mac_tap(-706);
    __mac_tap(0);
    __mac_tap(678);
    __mac_tap(0);
    __mac_tap(-647);
    __mac_tap(0);
    __mac_tap(615);
    __mac_tap(0);
    __mac_tap(-582);
    __mac_tap(0);
    __mac_tap(548);
    __mac_tap(0);
    __mac_tap(-513);
    __mac_tap(0);
    __mac_tap(478);
    __mac_tap(0);
    __mac_tap(-443);
    __mac_tap(0);
    __mac_tap(408);
    __mac_tap(0);
    __mac_tap(-374);
    __mac_tap(0);
    __mac_tap(340);
    __mac_tap(0);
    __mac_tap(-308);
    __mac_tap(0);
    __mac_tap(276);
    __mac_tap(0);
    __mac_tap(-246);
    __mac_tap(0);
    __mac_tap(218);
    __mac_tap(0);
    __mac_tap(-191);
    __mac_tap(0);
    __mac_tap(166);
    __mac_tap(0);
    __mac_tap(-143);
    __mac_tap(0);
    __mac_tap(121);
    __mac_tap(0);
    __mac_tap(-102);
    __mac_tap(0);
    __mac_tap(84);
    __mac_tap(0);
    __mac_tap(-68);
    __mac_tap(0);
    __mac_tap(54);
    __mac_tap(0);
    __mac_tap(-42);
    __mac_tap(0);
    __mac_tap(32);
    __mac_tap(0);
    __mac_tap(-23);
    __mac_tap(0);
    __mac_tap(15);
    __mac_tap(0);
    __mac_tap(-9);
    __mac_tap(0);
    __mac_tap(4);
    __mac_tap(0);
    __mac_tap(0);
    __mac_tap(0);
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(5);
    __mac_tap(0);
    __mac_tap(-6);
    __mac_tap(0);
    __mac_tap(7);
    __mac_tap(0);
    __mac_tap(-7);
    __mac_tap(0);
    __mac_tap(7);
    __mac_tap(0);
    __mac_tap(-7);
    __mac_tap(0);
    __mac_tap(6);
    __mac_tap(0);
    __mac_tap(-5);
    __mac_tap(0);
    __mac_tap(4);
    __mac_tap(0);
    __mac_tap(-3);
    return (int16_t)(acc >> 15);
  }

  // float versions of FIR are experimental and not in use in this code
  static const int16_t __not_in_flash_func(bpf_fs4f_cw)(const int16_t sample)
  {
    // 31250, 60dB, 400Hz, 201 taps
    static float x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = (float)sample/32768.0f;
    float acc = 0.0f;
    __mac_tap(-0.0001f);
    __mac_zap(0.0f);
    __mac_tap(0.000127f);
    __mac_zap(0.0f);
    __mac_tap(-0.000154f);
    __mac_zap(0.0f);
    __mac_tap(0.000179f);
    __mac_zap(0.0f);
    __mac_tap(-0.000199f);
    __mac_zap(0.0f);
    __mac_tap(0.000212f);
    __mac_zap(0.0f);
    __mac_tap(-0.000217f);
    __mac_zap(0.0f);
    __mac_tap(0.000209f);
    __mac_zap(0.0f);
    __mac_tap(-0.000187f);
    __mac_zap(0.0f);
    __mac_tap(0.000146f);
    __mac_zap(0.0f);
    __mac_tap(-0.000083f);
    __mac_zap(0.0f);
    __mac_tap(-0.000006f);
    __mac_zap(0.0f);
    __mac_tap(0.000124f);
    __mac_zap(0.0f);
    __mac_tap(-0.000276f);
    __mac_zap(0.0f);
    __mac_tap(0.000465f);
    __mac_zap(0.0f);
    __mac_tap(-0.000694f);
    __mac_zap(0.0f);
    __mac_tap(0.000968f);
    __mac_zap(0.0f);
    __mac_tap(-0.00129f);
    __mac_zap(0.0f);
    __mac_tap(0.001662f);
    __mac_zap(0.0f);
    __mac_tap(-0.002088f);
    __mac_zap(0.0f);
    __mac_tap(0.002569f);
    __mac_zap(0.0f);
    __mac_tap(-0.003106f);
    __mac_zap(0.0f);
    __mac_tap(0.003701f);
    __mac_zap(0.0f);
    __mac_tap(-0.004354f);
    __mac_zap(0.0f);
    __mac_tap(0.005064f);
    __mac_zap(0.0f);
    __mac_tap(-0.00583f);
    __mac_zap(0.0f);
    __mac_tap(0.00665f);
    __mac_zap(0.0f);
    __mac_tap(-0.007519f);
    __mac_zap(0.0f);
    __mac_tap(0.008436f);
    __mac_zap(0.0f);
    __mac_tap(-0.009394f);
    __mac_zap(0.0f);
    __mac_tap(0.010389f);
    __mac_zap(0.0f);
    __mac_tap(-0.011415f);
    __mac_zap(0.0f);
    __mac_tap(0.012463f);
    __mac_zap(0.0f);
    __mac_tap(-0.013527f);
    __mac_zap(0.0f);
    __mac_tap(0.014598f);
    __mac_zap(0.0f);
    __mac_tap(-0.015668f);
    __mac_zap(0.0f);
    __mac_tap(0.016728f);
    __mac_zap(0.0f);
    __mac_tap(-0.017768f);
    __mac_zap(0.0f);
    __mac_tap(0.018779f);
    __mac_zap(0.0f);
    __mac_tap(-0.019751f);
    __mac_zap(0.0f);
    __mac_tap(0.020676f);
    __mac_zap(0.0f);
    __mac_tap(-0.021544f);
    __mac_zap(0.0f);
    __mac_tap(0.022347f);
    __mac_zap(0.0f);
    __mac_tap(-0.023076f);
    __mac_zap(0.0f);
    __mac_tap(0.023725f);
    __mac_zap(0.0f);
    __mac_tap(-0.024285f);
    __mac_zap(0.0f);
    __mac_tap(0.024752f);
    __mac_zap(0.0f);
    __mac_tap(-0.025121f);
    __mac_zap(0.0f);
    __mac_tap(0.025387f);
    __mac_zap(0.0f);
    __mac_tap(-0.025548f);
    __mac_zap(0.0f);
    __mac_tap(0.025602f);
    __mac_zap(0.0f);
    __mac_tap(-0.025548f);
    __mac_zap(0.0f);
    __mac_tap(0.025387f);
    __mac_zap(0.0f);
    __mac_tap(-0.025121f);
    __mac_zap(0.0f);
    __mac_tap(0.024752f);
    __mac_zap(0.0f);
    __mac_tap(-0.024285f);
    __mac_zap(0.0f);
    __mac_tap(0.023725f);
    __mac_zap(0.0f);
    __mac_tap(-0.023076f);
    __mac_zap(0.0f);
    __mac_tap(0.022347f);
    __mac_zap(0.0f);
    __mac_tap(-0.021544f);
    __mac_zap(0.0f);
    __mac_tap(0.020676f);
    __mac_zap(0.0f);
    __mac_tap(-0.019751f);
    __mac_zap(0.0f);
    __mac_tap(0.018779f);
    __mac_zap(0.0f);
    __mac_tap(-0.017768f);
    __mac_zap(0.0f);
    __mac_tap(0.016728f);
    __mac_zap(0.0f);
    __mac_tap(-0.015668f);
    __mac_zap(0.0f);
    __mac_tap(0.014598f);
    __mac_zap(0.0f);
    __mac_tap(-0.013527f);
    __mac_zap(0.0f);
    __mac_tap(0.012463f);
    __mac_zap(0.0f);
    __mac_tap(-0.011415f);
    __mac_zap(0.0f);
    __mac_tap(0.010389f);
    __mac_zap(0.0f);
    __mac_tap(-0.009394f);
    __mac_zap(0.0f);
    __mac_tap(0.008436f);
    __mac_zap(0.0f);
    __mac_tap(-0.007519f);
    __mac_zap(0.0f);
    __mac_tap(0.00665f);
    __mac_zap(0.0f);
    __mac_tap(-0.00583f);
    __mac_zap(0.0f);
    __mac_tap(0.005064f);
    __mac_zap(0.0f);
    __mac_tap(-0.004354f);
    __mac_zap(0.0f);
    __mac_tap(0.003701f);
    __mac_zap(0.0f);
    __mac_tap(-0.003106f);
    __mac_zap(0.0f);
    __mac_tap(0.002569f);
    __mac_zap(0.0f);
    __mac_tap(-0.002088f);
    __mac_zap(0.0f);
    __mac_tap(0.001662f);
    __mac_zap(0.0f);
    __mac_tap(-0.00129f);
    __mac_zap(0.0f);
    __mac_tap(0.000968f);
    __mac_zap(0.0f);
    __mac_tap(-0.000694f);
    __mac_zap(0.0f);
    __mac_tap(0.000465f);
    __mac_zap(0.0f);
    __mac_tap(-0.000276f);
    __mac_zap(0.0f);
    __mac_tap(0.000124f);
    __mac_zap(0.0f);
    __mac_tap(-0.000006f);
    __mac_zap(0.0f);
    __mac_tap(-0.000083f);
    __mac_zap(0.0f);
    __mac_tap(0.000146f);
    __mac_zap(0.0f);
    __mac_tap(-0.000187f);
    __mac_zap(0.0f);
    __mac_tap(0.000209f);
    __mac_zap(0.0f);
    __mac_tap(-0.000217f);
    __mac_zap(0.0f);
    __mac_tap(0.000212f);
    __mac_zap(0.0f);
    __mac_tap(-0.000199f);
    __mac_zap(0.0f);
    __mac_tap(0.000179f);
    __mac_zap(0.0f);
    __mac_tap(-0.000154f);
    __mac_zap(0.0f);
    __mac_tap(0.000127f);
    __mac_zap(0.0f);
    __mac_tap(-0.0001f);
    return (int16_t)(acc * 32768.0f);
  }

  static const int16_t __not_in_flash_func(lpf_fs8f_rx)(const int16_t sample)
  {
    // 31250, 60dB, 400Hz, 201 taps
    static float x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = (float)sample/32768.0f;
    float acc = 0.0f;
    __mac_zap(0.0f);
    __mac_tap(0.000054f);
    __mac_tap(0.000089f);
    __mac_tap(0.000072f);
    __mac_zap(0.0f);
    __mac_tap(-0.000094f);
    __mac_tap(-0.00015f);
    __mac_tap(-0.000119f);
    __mac_zap(0.0f);
    __mac_tap(0.000147f);
    __mac_tap(0.000231f);
    __mac_tap(0.00018f);
    __mac_zap(0.0f);
    __mac_tap(-0.000217f);
    __mac_tap(-0.000336f);
    __mac_tap(-0.000259f);
    __mac_zap(0.0f);
    __mac_tap(0.000306f);
    __mac_tap(0.000468f);
    __mac_tap(0.000358f);
    __mac_zap(0.0f);
    __mac_tap(-0.000417f);
    __mac_tap(-0.000634f);
    __mac_tap(-0.000481f);
    __mac_zap(0.0f);
    __mac_tap(0.000553f);
    __mac_tap(0.000836f);
    __mac_tap(0.000632f);
    __mac_zap(0.0f);
    __mac_tap(-0.000719f);
    __mac_tap(-0.001082f);
    __mac_tap(-0.000814f);
    __mac_zap(0.0f);
    __mac_tap(0.000918f);
    __mac_tap(0.001377f);
    __mac_tap(0.001032f);
    __mac_zap(0.0f);
    __mac_tap(-0.001156f);
    __mac_tap(-0.001729f);
    __mac_tap(-0.001292f);
    __mac_zap(0.0f);
    __mac_tap(0.001439f);
    __mac_tap(0.002146f);
    __mac_tap(0.001599f);
    __mac_zap(0.0f);
    __mac_tap(-0.001774f);
    __mac_tap(-0.002639f);
    __mac_tap(-0.001963f);
    __mac_zap(0.0f);
    __mac_tap(0.002169f);
    __mac_tap(0.003222f);
    __mac_tap(0.002392f);
    __mac_zap(0.0f);
    __mac_tap(-0.002636f);
    __mac_tap(-0.003911f);
    __mac_tap(-0.002901f);
    __mac_zap(0.0f);
    __mac_tap(0.00319f);
    __mac_tap(0.00473f);
    __mac_tap(0.003507f);
    __mac_zap(0.0f);
    __mac_tap(-0.003853f);
    __mac_tap(-0.005712f);
    __mac_tap(-0.004235f);
    __mac_zap(0.0f);
    __mac_tap(0.004656f);
    __mac_tap(0.006906f);
    __mac_tap(0.005123f);
    __mac_zap(0.0f);
    __mac_tap(-0.005645f);
    __mac_tap(-0.008384f);
    __mac_tap(-0.00623f);
    __mac_zap(0.0f);
    __mac_tap(0.006894f);
    __mac_tap(0.010268f);
    __mac_tap(0.007653f);
    __mac_zap(0.0f);
    __mac_tap(-0.008531f);
    __mac_tap(-0.012763f);
    __mac_tap(-0.009562f);
    __mac_zap(0.0f);
    __mac_tap(0.010791f);
    __mac_tap(0.016265f);
    __mac_tap(0.012289f);
    __mac_zap(0.0f);
    __mac_tap(-0.01416f);
    __mac_tap(-0.021618f);
    __mac_tap(-0.016577f);
    __mac_zap(0.0f);
    __mac_tap(0.019835f);
    __mac_tap(0.031024f);
    __mac_tap(0.024494f);
    __mac_zap(0.0f);
    __mac_tap(-0.031752f);
    __mac_tap(-0.052564f);
    __mac_tap(-0.044728f);
    __mac_zap(0.0f);
    __mac_tap(0.074853f);
    __mac_tap(0.158992f);
    __mac_tap(0.225021f);
    __mac_tap(0.25f);
    __mac_tap(0.225021f);
    __mac_tap(0.158992f);
    __mac_tap(0.074853f);
    __mac_zap(0.0f);
    __mac_tap(-0.044728f);
    __mac_tap(-0.052564f);
    __mac_tap(-0.031752f);
    __mac_zap(0.0f);
    __mac_tap(0.024494f);
    __mac_tap(0.031024f);
    __mac_tap(0.019835f);
    __mac_zap(0.0f);
    __mac_tap(-0.016577f);
    __mac_tap(-0.021618f);
    __mac_tap(-0.01416f);
    __mac_zap(0.0f);
    __mac_tap(0.012289f);
    __mac_tap(0.016265f);
    __mac_tap(0.010791f);
    __mac_zap(0.0f);
    __mac_tap(-0.009562f);
    __mac_tap(-0.012763f);
    __mac_tap(-0.008531f);
    __mac_zap(0.0f);
    __mac_tap(0.007653f);
    __mac_tap(0.010268f);
    __mac_tap(0.006894f);
    __mac_zap(0.0f);
    __mac_tap(-0.00623f);
    __mac_tap(-0.008384f);
    __mac_tap(-0.005645f);
    __mac_zap(0.0f);
    __mac_tap(0.005123f);
    __mac_tap(0.006906f);
    __mac_tap(0.004656f);
    __mac_zap(0.0f);
    __mac_tap(-0.004235f);
    __mac_tap(-0.005712f);
    __mac_tap(-0.003853f);
    __mac_zap(0.0f);
    __mac_tap(0.003507f);
    __mac_tap(0.00473f);
    __mac_tap(0.00319f);
    __mac_zap(0.0f);
    __mac_tap(-0.002901f);
    __mac_tap(-0.003911f);
    __mac_tap(-0.002636f);
    __mac_zap(0.0f);
    __mac_tap(0.002392f);
    __mac_tap(0.003222f);
    __mac_tap(0.002169f);
    __mac_zap(0.0f);
    __mac_tap(-0.001963f);
    __mac_tap(-0.002639f);
    __mac_tap(-0.001774f);
    __mac_zap(0.0f);
    __mac_tap(0.001599f);
    __mac_tap(0.002146f);
    __mac_tap(0.001439f);
    __mac_zap(0.0f);
    __mac_tap(-0.001292f);
    __mac_tap(-0.001729f);
    __mac_tap(-0.001156f);
    __mac_zap(0.0f);
    __mac_tap(0.001032f);
    __mac_tap(0.001377f);
    __mac_tap(0.000918f);
    __mac_zap(0.0f);
    __mac_tap(-0.000814f);
    __mac_tap(-0.001082f);
    __mac_tap(-0.000719f);
    __mac_zap(0.0f);
    __mac_tap(0.000632f);
    __mac_tap(0.000836f);
    __mac_tap(0.000553f);
    __mac_zap(0.0f);
    __mac_tap(-0.000481f);
    __mac_tap(-0.000634f);
    __mac_tap(-0.000417f);
    __mac_zap(0.0f);
    __mac_tap(0.000358f);
    __mac_tap(0.000468f);
    __mac_tap(0.000306f);
    __mac_zap(0.0f);
    __mac_tap(-0.000259f);
    __mac_tap(-0.000336f);
    __mac_tap(-0.000217f);
    __mac_zap(0.0f);
    __mac_tap(0.00018f);
    __mac_tap(0.000231f);
    __mac_tap(0.000147f);
    __mac_zap(0.0f);
    __mac_tap(-0.000119f);
    __mac_tap(-0.00015f);
    __mac_tap(-0.000094f);
    __mac_zap(0.0f);
    __mac_tap(0.000072f);
    __mac_tap(0.000089f);
    __mac_tap(0.000054f);
    __mac_zap(0.0f);
    acc *= 32768.0f;
    if (acc>32767.0f)
    {
      return (int16_t)32767;
    }
    if (acc<-32768.0f)
    {
      return (int16_t)-32768;
    }
    return (int16_t)acc;
  }

  static const int16_t __not_in_flash_func(lpf_3000_rx)(const int16_t sample)
  {
    // 31250, 201 taps, 50db
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(-1);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(3);
    __mac_tap(4);
    __mac_tap(3);
    __mac_tap(1);
    __mac_tap(-2);
    __mac_tap(-5);
    __mac_tap(-7);
    __mac_tap(-6);
    __mac_tap(-2);
    __mac_tap(3);
    __mac_tap(8);
    __mac_tap(11);
    __mac_tap(10);
    __mac_tap(5);
    __mac_tap(-3);
    __mac_tap(-11);
    __mac_tap(-16);
    __mac_tap(-16);
    __mac_tap(-10);
    __mac_tap(2);
    __mac_tap(14);
    __mac_tap(23);
    __mac_tap(24);
    __mac_tap(17);
    __mac_tap(1);
    __mac_tap(-16);
    __mac_tap(-30);
    __mac_tap(-35);
    __mac_tap(-27);
    __mac_tap(-7);
    __mac_tap(18);
    __mac_tap(39);
    __mac_tap(48);
    __mac_tap(40);
    __mac_tap(16);
    __mac_tap(-17);
    __mac_tap(-47);
    __mac_tap(-63);
    __mac_tap(-57);
    __mac_tap(-29);
    __mac_tap(13);
    __mac_tap(55);
    __mac_tap(81);
    __mac_tap(79);
    __mac_tap(48);
    __mac_tap(-5);
    __mac_tap(-61);
    __mac_tap(-100);
    __mac_tap(-106);
    __mac_tap(-73);
    __mac_tap(-9);
    __mac_tap(65);
    __mac_tap(122);
    __mac_tap(139);
    __mac_tap(106);
    __mac_tap(31);
    __mac_tap(-64);
    __mac_tap(-144);
    __mac_tap(-178);
    __mac_tap(-150);
    __mac_tap(-63);
    __mac_tap(56);
    __mac_tap(166);
    __mac_tap(225);
    __mac_tap(207);
    __mac_tap(109);
    __mac_tap(-39);
    __mac_tap(-188);
    __mac_tap(-282);
    __mac_tap(-281);
    __mac_tap(-175);
    __mac_tap(8);
    __mac_tap(208);
    __mac_tap(353);
    __mac_tap(382);
    __mac_tap(271);
    __mac_tap(44);
    __mac_tap(-227);
    __mac_tap(-447);
    __mac_tap(-528);
    __mac_tap(-420);
    __mac_tap(-137);
    __mac_tap(242);
    __mac_tap(588);
    __mac_tap(768);
    __mac_tap(684);
    __mac_tap(317);
    __mac_tap(-253);
    __mac_tap(-856);
    __mac_tap(-1274);
    __mac_tap(-1298);
    __mac_tap(-792);
    __mac_tap(260);
    __mac_tap(1730);
    __mac_tap(3370);
    __mac_tap(4868);
    __mac_tap(5915);
    __mac_tap(6291);
    __mac_tap(5915);
    __mac_tap(4868);
    __mac_tap(3370);
    __mac_tap(1730);
    __mac_tap(260);
    __mac_tap(-792);
    __mac_tap(-1298);
    __mac_tap(-1274);
    __mac_tap(-856);
    __mac_tap(-253);
    __mac_tap(317);
    __mac_tap(684);
    __mac_tap(768);
    __mac_tap(588);
    __mac_tap(242);
    __mac_tap(-137);
    __mac_tap(-420);
    __mac_tap(-528);
    __mac_tap(-447);
    __mac_tap(-227);
    __mac_tap(44);
    __mac_tap(271);
    __mac_tap(382);
    __mac_tap(353);
    __mac_tap(208);
    __mac_tap(8);
    __mac_tap(-175);
    __mac_tap(-281);
    __mac_tap(-282);
    __mac_tap(-188);
    __mac_tap(-39);
    __mac_tap(109);
    __mac_tap(207);
    __mac_tap(225);
    __mac_tap(166);
    __mac_tap(56);
    __mac_tap(-63);
    __mac_tap(-150);
    __mac_tap(-178);
    __mac_tap(-144);
    __mac_tap(-64);
    __mac_tap(31);
    __mac_tap(106);
    __mac_tap(139);
    __mac_tap(122);
    __mac_tap(65);
    __mac_tap(-9);
    __mac_tap(-73);
    __mac_tap(-106);
    __mac_tap(-100);
    __mac_tap(-61);
    __mac_tap(-5);
    __mac_tap(48);
    __mac_tap(79);
    __mac_tap(81);
    __mac_tap(55);
    __mac_tap(13);
    __mac_tap(-29);
    __mac_tap(-57);
    __mac_tap(-63);
    __mac_tap(-47);
    __mac_tap(-17);
    __mac_tap(16);
    __mac_tap(40);
    __mac_tap(48);
    __mac_tap(39);
    __mac_tap(18);
    __mac_tap(-7);
    __mac_tap(-27);
    __mac_tap(-35);
    __mac_tap(-30);
    __mac_tap(-16);
    __mac_tap(1);
    __mac_tap(17);
    __mac_tap(24);
    __mac_tap(23);
    __mac_tap(14);
    __mac_tap(2);
    __mac_tap(-10);
    __mac_tap(-16);
    __mac_tap(-16);
    __mac_tap(-11);
    __mac_tap(-3);
    __mac_tap(5);
    __mac_tap(10);
    __mac_tap(11);
    __mac_tap(8);
    __mac_tap(3);
    __mac_tap(-2);
    __mac_tap(-6);
    __mac_tap(-7);
    __mac_tap(-5);
    __mac_tap(-2);
    __mac_tap(1);
    __mac_tap(3);
    __mac_tap(4);
    __mac_tap(3);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(-1);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(bpf_500_1500_cw)(const int16_t sample)
  {
    // 31250, 201 taps, 50db
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(-2);
    __mac_tap(-3);
    __mac_tap(-4);
    __mac_tap(-4);
    __mac_tap(-4);
    __mac_tap(-2);
    __mac_tap(-1);
    __mac_tap(2);
    __mac_tap(4);
    __mac_tap(6);
    __mac_tap(8);
    __mac_tap(8);
    __mac_tap(7);
    __mac_tap(5);
    __mac_tap(0);
    __mac_tap(-6);
    __mac_tap(-14);
    __mac_tap(-23);
    __mac_tap(-33);
    __mac_tap(-43);
    __mac_tap(-52);
    __mac_tap(-59);
    __mac_tap(-64);
    __mac_tap(-65);
    __mac_tap(-63);
    __mac_tap(-58);
    __mac_tap(-49);
    __mac_tap(-38);
    __mac_tap(-24);
    __mac_tap(-10);
    __mac_tap(4);
    __mac_tap(16);
    __mac_tap(26);
    __mac_tap(31);
    __mac_tap(31);
    __mac_tap(27);
    __mac_tap(19);
    __mac_tap(7);
    __mac_tap(-7);
    __mac_tap(-22);
    __mac_tap(-35);
    __mac_tap(-44);
    __mac_tap(-47);
    __mac_tap(-43);
    __mac_tap(-30);
    __mac_tap(-9);
    __mac_tap(21);
    __mac_tap(59);
    __mac_tap(101);
    __mac_tap(146);
    __mac_tap(189);
    __mac_tap(228);
    __mac_tap(259);
    __mac_tap(279);
    __mac_tap(285);
    __mac_tap(277);
    __mac_tap(254);
    __mac_tap(217);
    __mac_tap(169);
    __mac_tap(113);
    __mac_tap(54);
    __mac_tap(-3);
    __mac_tap(-54);
    __mac_tap(-94);
    __mac_tap(-118);
    __mac_tap(-124);
    __mac_tap(-112);
    __mac_tap(-83);
    __mac_tap(-39);
    __mac_tap(14);
    __mac_tap(70);
    __mac_tap(122);
    __mac_tap(162);
    __mac_tap(181);
    __mac_tap(174);
    __mac_tap(134);
    __mac_tap(58);
    __mac_tap(-53);
    __mac_tap(-196);
    __mac_tap(-367);
    __mac_tap(-555);
    __mac_tap(-749);
    __mac_tap(-937);
    __mac_tap(-1103);
    __mac_tap(-1234);
    __mac_tap(-1316);
    __mac_tap(-1339);
    __mac_tap(-1294);
    __mac_tap(-1177);
    __mac_tap(-989);
    __mac_tap(-735);
    __mac_tap(-424);
    __mac_tap(-70);
    __mac_tap(311);
    __mac_tap(698);
    __mac_tap(1072);
    __mac_tap(1411);
    __mac_tap(1698);
    __mac_tap(1915);
    __mac_tap(2051);
    __mac_tap(2097);
    __mac_tap(2051);
    __mac_tap(1915);
    __mac_tap(1698);
    __mac_tap(1411);
    __mac_tap(1072);
    __mac_tap(698);
    __mac_tap(311);
    __mac_tap(-70);
    __mac_tap(-424);
    __mac_tap(-735);
    __mac_tap(-989);
    __mac_tap(-1177);
    __mac_tap(-1294);
    __mac_tap(-1339);
    __mac_tap(-1316);
    __mac_tap(-1234);
    __mac_tap(-1103);
    __mac_tap(-937);
    __mac_tap(-749);
    __mac_tap(-555);
    __mac_tap(-367);
    __mac_tap(-196);
    __mac_tap(-53);
    __mac_tap(58);
    __mac_tap(134);
    __mac_tap(174);
    __mac_tap(181);
    __mac_tap(162);
    __mac_tap(122);
    __mac_tap(70);
    __mac_tap(14);
    __mac_tap(-39);
    __mac_tap(-83);
    __mac_tap(-112);
    __mac_tap(-124);
    __mac_tap(-118);
    __mac_tap(-94);
    __mac_tap(-54);
    __mac_tap(-3);
    __mac_tap(54);
    __mac_tap(113);
    __mac_tap(169);
    __mac_tap(217);
    __mac_tap(254);
    __mac_tap(277);
    __mac_tap(285);
    __mac_tap(279);
    __mac_tap(259);
    __mac_tap(228);
    __mac_tap(189);
    __mac_tap(146);
    __mac_tap(101);
    __mac_tap(59);
    __mac_tap(21);
    __mac_tap(-9);
    __mac_tap(-30);
    __mac_tap(-43);
    __mac_tap(-47);
    __mac_tap(-44);
    __mac_tap(-35);
    __mac_tap(-22);
    __mac_tap(-7);
    __mac_tap(7);
    __mac_tap(19);
    __mac_tap(27);
    __mac_tap(31);
    __mac_tap(31);
    __mac_tap(26);
    __mac_tap(16);
    __mac_tap(4);
    __mac_tap(-10);
    __mac_tap(-24);
    __mac_tap(-38);
    __mac_tap(-49);
    __mac_tap(-58);
    __mac_tap(-63);
    __mac_tap(-65);
    __mac_tap(-64);
    __mac_tap(-59);
    __mac_tap(-52);
    __mac_tap(-43);
    __mac_tap(-33);
    __mac_tap(-23);
    __mac_tap(-14);
    __mac_tap(-6);
    __mac_tap(0);
    __mac_tap(5);
    __mac_tap(7);
    __mac_tap(8);
    __mac_tap(8);
    __mac_tap(6);
    __mac_tap(4);
    __mac_tap(2);
    __mac_tap(-1);
    __mac_tap(-2);
    __mac_tap(-4);
    __mac_tap(-4);
    __mac_tap(-4);
    __mac_tap(-3);
    __mac_tap(-2);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(bpf_fs4_amn)(const int16_t sample)
  {
    // AM Narrow
    // 31248, 60dB, 6KHz @ FS/4, 201 taps
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(8);
    __mac_tap(0);
    __mac_tap(-2);
    __mac_tap(0);
    __mac_tap(-11);
    __mac_tap(0);
    __mac_tap(12);
    __mac_tap(0);
    __mac_tap(6);
    __mac_tap(0);
    __mac_tap(-22);
    __mac_tap(0);
    __mac_tap(10);
    __mac_tap(0);
    __mac_tap(22);
    __mac_tap(0);
    __mac_tap(-32);
    __mac_tap(0);
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(46);
    __mac_tap(0);
    __mac_tap(-33);
    __mac_tap(0);
    __mac_tap(-33);
    __mac_tap(0);
    __mac_tap(70);
    __mac_tap(0);
    __mac_tap(-14);
    __mac_tap(0);
    __mac_tap(-77);
    __mac_tap(0);
    __mac_tap(80);
    __mac_tap(0);
    __mac_tap(33);
    __mac_tap(0);
    __mac_tap(-126);
    __mac_tap(0);
    __mac_tap(59);
    __mac_tap(0);
    __mac_tap(109);
    __mac_tap(0);
    __mac_tap(-158);
    __mac_tap(0);
    __mac_tap(-9);
    __mac_tap(0);
    __mac_tap(201);
    __mac_tap(0);
    __mac_tap(-146);
    __mac_tap(0);
    __mac_tap(-129);
    __mac_tap(0);
    __mac_tap(278);
    __mac_tap(0);
    __mac_tap(-62);
    __mac_tap(0);
    __mac_tap(-287);
    __mac_tap(0);
    __mac_tap(300);
    __mac_tap(0);
    __mac_tap(112);
    __mac_tap(0);
    __mac_tap(-451);
    __mac_tap(0);
    __mac_tap(218);
    __mac_tap(0);
    __mac_tap(376);
    __mac_tap(0);
    __mac_tap(-562);
    __mac_tap(0);
    __mac_tap(-16);
    __mac_tap(0);
    __mac_tap(706);
    __mac_tap(0);
    __mac_tap(-542);
    __mac_tap(0);
    __mac_tap(-452);
    __mac_tap(0);
    __mac_tap(1056);
    __mac_tap(0);
    __mac_tap(-274);
    __mac_tap(0);
    __mac_tap(-1176);
    __mac_tap(0);
    __mac_tap(1368);
    __mac_tap(0);
    __mac_tap(505);
    __mac_tap(0);
    __mac_tap(-2549);
    __mac_tap(0);
    __mac_tap(1584);
    __mac_tap(0);
    __mac_tap(3459);
    __mac_tap(0);
    __mac_tap(-9736);
    __mac_tap(0);
    __mac_tap(12584);
    __mac_tap(0);
    __mac_tap(-9736);
    __mac_tap(0);
    __mac_tap(3459);
    __mac_tap(0);
    __mac_tap(1584);
    __mac_tap(0);
    __mac_tap(-2549);
    __mac_tap(0);
    __mac_tap(505);
    __mac_tap(0);
    __mac_tap(1368);
    __mac_tap(0);
    __mac_tap(-1176);
    __mac_tap(0);
    __mac_tap(-274);
    __mac_tap(0);
    __mac_tap(1056);
    __mac_tap(0);
    __mac_tap(-452);
    __mac_tap(0);
    __mac_tap(-542);
    __mac_tap(0);
    __mac_tap(706);
    __mac_tap(0);
    __mac_tap(-16);
    __mac_tap(0);
    __mac_tap(-562);
    __mac_tap(0);
    __mac_tap(376);
    __mac_tap(0);
    __mac_tap(218);
    __mac_tap(0);
    __mac_tap(-451);
    __mac_tap(0);
    __mac_tap(112);
    __mac_tap(0);
    __mac_tap(300);
    __mac_tap(0);
    __mac_tap(-287);
    __mac_tap(0);
    __mac_tap(-62);
    __mac_tap(0);
    __mac_tap(278);
    __mac_tap(0);
    __mac_tap(-129);
    __mac_tap(0);
    __mac_tap(-146);
    __mac_tap(0);
    __mac_tap(201);
    __mac_tap(0);
    __mac_tap(-9);
    __mac_tap(0);
    __mac_tap(-158);
    __mac_tap(0);
    __mac_tap(109);
    __mac_tap(0);
    __mac_tap(59);
    __mac_tap(0);
    __mac_tap(-126);
    __mac_tap(0);
    __mac_tap(33);
    __mac_tap(0);
    __mac_tap(80);
    __mac_tap(0);
    __mac_tap(-77);
    __mac_tap(0);
    __mac_tap(-14);
    __mac_tap(0);
    __mac_tap(70);
    __mac_tap(0);
    __mac_tap(-33);
    __mac_tap(0);
    __mac_tap(-33);
    __mac_tap(0);
    __mac_tap(46);
    __mac_tap(0);
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(-32);
    __mac_tap(0);
    __mac_tap(22);
    __mac_tap(0);
    __mac_tap(10);
    __mac_tap(0);
    __mac_tap(-22);
    __mac_tap(0);
    __mac_tap(6);
    __mac_tap(0);
    __mac_tap(12);
    __mac_tap(0);
    __mac_tap(-11);
    __mac_tap(0);
    __mac_tap(-2);
    __mac_tap(0);
    __mac_tap(8);
    __mac_tap(0);
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(-3);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(bpf_fs4_amw)(const int16_t sample)
  {
    // AM Wide
    // nominal 31250 sample rate
    // 8Khz BW @FS/4
    // 60dB att
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(-4);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(7);
    __mac_tap(0);
    __mac_tap(-2);
    __mac_tap(0);
    __mac_tap(-12);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(18);
    __mac_tap(0);
    __mac_tap(-1);
    __mac_tap(0);
    __mac_tap(-26);
    __mac_tap(0);
    __mac_tap(-1);
    __mac_tap(0);
    __mac_tap(36);
    __mac_tap(0);
    __mac_tap(4);
    __mac_tap(0);
    __mac_tap(-47);
    __mac_tap(0);
    __mac_tap(-9);
    __mac_tap(0);
    __mac_tap(61);
    __mac_tap(0);
    __mac_tap(17);
    __mac_tap(0);
    __mac_tap(-77);
    __mac_tap(0);
    __mac_tap(-29);
    __mac_tap(0);
    __mac_tap(95);
    __mac_tap(0);
    __mac_tap(44);
    __mac_tap(0);
    __mac_tap(-115);
    __mac_tap(0);
    __mac_tap(-64);
    __mac_tap(0);
    __mac_tap(136);
    __mac_tap(0);
    __mac_tap(90);
    __mac_tap(0);
    __mac_tap(-159);
    __mac_tap(0);
    __mac_tap(-124);
    __mac_tap(0);
    __mac_tap(183);
    __mac_tap(0);
    __mac_tap(165);
    __mac_tap(0);
    __mac_tap(-208);
    __mac_tap(0);
    __mac_tap(-217);
    __mac_tap(0);
    __mac_tap(234);
    __mac_tap(0);
    __mac_tap(282);
    __mac_tap(0);
    __mac_tap(-259);
    __mac_tap(0);
    __mac_tap(-362);
    __mac_tap(0);
    __mac_tap(283);
    __mac_tap(0);
    __mac_tap(463);
    __mac_tap(0);
    __mac_tap(-307);
    __mac_tap(0);
    __mac_tap(-593);
    __mac_tap(0);
    __mac_tap(328);
    __mac_tap(0);
    __mac_tap(765);
    __mac_tap(0);
    __mac_tap(-347);
    __mac_tap(0);
    __mac_tap(-1005);
    __mac_tap(0);
    __mac_tap(364);
    __mac_tap(0);
    __mac_tap(1367);
    __mac_tap(0);
    __mac_tap(-377);
    __mac_tap(0);
    __mac_tap(-1997);
    __mac_tap(0);
    __mac_tap(386);
    __mac_tap(0);
    __mac_tap(3423);
    __mac_tap(0);
    __mac_tap(-392);
    __mac_tap(0);
    __mac_tap(-10412);
    __mac_tap(0);
    __mac_tap(16778);
    __mac_tap(0);
    __mac_tap(-10412);
    __mac_tap(0);
    __mac_tap(-392);
    __mac_tap(0);
    __mac_tap(3423);
    __mac_tap(0);
    __mac_tap(386);
    __mac_tap(0);
    __mac_tap(-1997);
    __mac_tap(0);
    __mac_tap(-377);
    __mac_tap(0);
    __mac_tap(1367);
    __mac_tap(0);
    __mac_tap(364);
    __mac_tap(0);
    __mac_tap(-1005);
    __mac_tap(0);
    __mac_tap(-347);
    __mac_tap(0);
    __mac_tap(765);
    __mac_tap(0);
    __mac_tap(328);
    __mac_tap(0);
    __mac_tap(-593);
    __mac_tap(0);
    __mac_tap(-307);
    __mac_tap(0);
    __mac_tap(463);
    __mac_tap(0);
    __mac_tap(283);
    __mac_tap(0);
    __mac_tap(-362);
    __mac_tap(0);
    __mac_tap(-259);
    __mac_tap(0);
    __mac_tap(282);
    __mac_tap(0);
    __mac_tap(234);
    __mac_tap(0);
    __mac_tap(-217);
    __mac_tap(0);
    __mac_tap(-208);
    __mac_tap(0);
    __mac_tap(165);
    __mac_tap(0);
    __mac_tap(183);
    __mac_tap(0);
    __mac_tap(-124);
    __mac_tap(0);
    __mac_tap(-159);
    __mac_tap(0);
    __mac_tap(90);
    __mac_tap(0);
    __mac_tap(136);
    __mac_tap(0);
    __mac_tap(-64);
    __mac_tap(0);
    __mac_tap(-115);
    __mac_tap(0);
    __mac_tap(44);
    __mac_tap(0);
    __mac_tap(95);
    __mac_tap(0);
    __mac_tap(-29);
    __mac_tap(0);
    __mac_tap(-77);
    __mac_tap(0);
    __mac_tap(17);
    __mac_tap(0);
    __mac_tap(61);
    __mac_tap(0);
    __mac_tap(-9);
    __mac_tap(0);
    __mac_tap(-47);
    __mac_tap(0);
    __mac_tap(4);
    __mac_tap(0);
    __mac_tap(36);
    __mac_tap(0);
    __mac_tap(-1);
    __mac_tap(0);
    __mac_tap(-26);
    __mac_tap(0);
    __mac_tap(-1);
    __mac_tap(0);
    __mac_tap(18);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(-12);
    __mac_tap(0);
    __mac_tap(-2);
    __mac_tap(0);
    __mac_tap(7);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(-4);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(lpf_fs8_rx)(const int16_t sample)
  {
    // nominal 31250 sample rate
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(3);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(-3);
    __mac_tap(-5);
    __mac_tap(-4);
    __mac_tap(0);
    __mac_tap(5);
    __mac_tap(8);
    __mac_tap(6);
    __mac_tap(0);
    __mac_tap(-7);
    __mac_tap(-11);
    __mac_tap(-8);
    __mac_tap(0);
    __mac_tap(10);
    __mac_tap(15);
    __mac_tap(12);
    __mac_tap(0);
    __mac_tap(-14);
    __mac_tap(-21);
    __mac_tap(-16);
    __mac_tap(0);
    __mac_tap(18);
    __mac_tap(27);
    __mac_tap(21);
    __mac_tap(0);
    __mac_tap(-24);
    __mac_tap(-35);
    __mac_tap(-27);
    __mac_tap(0);
    __mac_tap(30);
    __mac_tap(45);
    __mac_tap(34);
    __mac_tap(0);
    __mac_tap(-38);
    __mac_tap(-57);
    __mac_tap(-42);
    __mac_tap(0);
    __mac_tap(47);
    __mac_tap(70);
    __mac_tap(52);
    __mac_tap(0);
    __mac_tap(-58);
    __mac_tap(-86);
    __mac_tap(-64);
    __mac_tap(0);
    __mac_tap(71);
    __mac_tap(106);
    __mac_tap(78);
    __mac_tap(0);
    __mac_tap(-86);
    __mac_tap(-128);
    __mac_tap(-95);
    __mac_tap(0);
    __mac_tap(105);
    __mac_tap(155);
    __mac_tap(115);
    __mac_tap(0);
    __mac_tap(-126);
    __mac_tap(-187);
    __mac_tap(-139);
    __mac_tap(0);
    __mac_tap(153);
    __mac_tap(226);
    __mac_tap(168);
    __mac_tap(0);
    __mac_tap(-185);
    __mac_tap(-275);
    __mac_tap(-204);
    __mac_tap(0);
    __mac_tap(226);
    __mac_tap(336);
    __mac_tap(251);
    __mac_tap(0);
    __mac_tap(-280);
    __mac_tap(-418);
    __mac_tap(-313);
    __mac_tap(0);
    __mac_tap(354);
    __mac_tap(533);
    __mac_tap(403);
    __mac_tap(0);
    __mac_tap(-464);
    __mac_tap(-708);
    __mac_tap(-543);
    __mac_tap(0);
    __mac_tap(650);
    __mac_tap(1017);
    __mac_tap(803);
    __mac_tap(0);
    __mac_tap(-1040);
    __mac_tap(-1722);
    __mac_tap(-1466);
    __mac_tap(0);
    __mac_tap(2453);
    __mac_tap(5210);
    __mac_tap(7373);
    __mac_tap(8192);
    __mac_tap(7373);
    __mac_tap(5210);
    __mac_tap(2453);
    __mac_tap(0);
    __mac_tap(-1466);
    __mac_tap(-1722);
    __mac_tap(-1040);
    __mac_tap(0);
    __mac_tap(803);
    __mac_tap(1017);
    __mac_tap(650);
    __mac_tap(0);
    __mac_tap(-543);
    __mac_tap(-708);
    __mac_tap(-464);
    __mac_tap(0);
    __mac_tap(403);
    __mac_tap(533);
    __mac_tap(354);
    __mac_tap(0);
    __mac_tap(-313);
    __mac_tap(-418);
    __mac_tap(-280);
    __mac_tap(0);
    __mac_tap(251);
    __mac_tap(336);
    __mac_tap(226);
    __mac_tap(0);
    __mac_tap(-204);
    __mac_tap(-275);
    __mac_tap(-185);
    __mac_tap(0);
    __mac_tap(168);
    __mac_tap(226);
    __mac_tap(153);
    __mac_tap(0);
    __mac_tap(-139);
    __mac_tap(-187);
    __mac_tap(-126);
    __mac_tap(0);
    __mac_tap(115);
    __mac_tap(155);
    __mac_tap(105);
    __mac_tap(0);
    __mac_tap(-95);
    __mac_tap(-128);
    __mac_tap(-86);
    __mac_tap(0);
    __mac_tap(78);
    __mac_tap(106);
    __mac_tap(71);
    __mac_tap(0);
    __mac_tap(-64);
    __mac_tap(-86);
    __mac_tap(-58);
    __mac_tap(0);
    __mac_tap(52);
    __mac_tap(70);
    __mac_tap(47);
    __mac_tap(0);
    __mac_tap(-42);
    __mac_tap(-57);
    __mac_tap(-38);
    __mac_tap(0);
    __mac_tap(34);
    __mac_tap(45);
    __mac_tap(30);
    __mac_tap(0);
    __mac_tap(-27);
    __mac_tap(-35);
    __mac_tap(-24);
    __mac_tap(0);
    __mac_tap(21);
    __mac_tap(27);
    __mac_tap(18);
    __mac_tap(0);
    __mac_tap(-16);
    __mac_tap(-21);
    __mac_tap(-14);
    __mac_tap(0);
    __mac_tap(12);
    __mac_tap(15);
    __mac_tap(10);
    __mac_tap(0);
    __mac_tap(-8);
    __mac_tap(-11);
    __mac_tap(-7);
    __mac_tap(0);
    __mac_tap(6);
    __mac_tap(8);
    __mac_tap(5);
    __mac_tap(0);
    __mac_tap(-4);
    __mac_tap(-5);
    __mac_tap(-3);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(3);
    __mac_tap(2);
    __mac_tap(0);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(bpf_300_2400_rx)(const int16_t sample)
  {
    // nominal 31250 sample rate
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(-1);
    __mac_tap(-1);
    __mac_tap(1);
    __mac_tap(2);
    __mac_tap(5);
    __mac_tap(6);
    __mac_tap(8);
    __mac_tap(8);
    __mac_tap(7);
    __mac_tap(4);
    __mac_tap(2);
    __mac_tap(-1);
    __mac_tap(-2);
    __mac_tap(0);
    __mac_tap(3);
    __mac_tap(9);
    __mac_tap(16);
    __mac_tap(24);
    __mac_tap(30);
    __mac_tap(33);
    __mac_tap(32);
    __mac_tap(27);
    __mac_tap(19);
    __mac_tap(11);
    __mac_tap(3);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(10);
    __mac_tap(23);
    __mac_tap(40);
    __mac_tap(56);
    __mac_tap(68);
    __mac_tap(72);
    __mac_tap(67);
    __mac_tap(52);
    __mac_tap(31);
    __mac_tap(8);
    __mac_tap(-13);
    __mac_tap(-25);
    __mac_tap(-24);
    __mac_tap(-11);
    __mac_tap(14);
    __mac_tap(44);
    __mac_tap(73);
    __mac_tap(92);
    __mac_tap(95);
    __mac_tap(79);
    __mac_tap(44);
    __mac_tap(-4);
    __mac_tap(-57);
    __mac_tap(-102);
    __mac_tap(-131);
    __mac_tap(-136);
    __mac_tap(-114);
    __mac_tap(-72);
    __mac_tap(-19);
    __mac_tap(31);
    __mac_tap(63);
    __mac_tap(65);
    __mac_tap(30);
    __mac_tap(-39);
    __mac_tap(-132);
    __mac_tap(-232);
    __mac_tap(-320);
    __mac_tap(-375);
    __mac_tap(-385);
    __mac_tap(-346);
    __mac_tap(-268);
    __mac_tap(-168);
    __mac_tap(-72);
    __mac_tap(-8);
    __mac_tap(2);
    __mac_tap(-55);
    __mac_tap(-176);
    __mac_tap(-343);
    __mac_tap(-525);
    __mac_tap(-683);
    __mac_tap(-782);
    __mac_tap(-794);
    __mac_tap(-711);
    __mac_tap(-545);
    __mac_tap(-329);
    __mac_tap(-113);
    __mac_tap(48);
    __mac_tap(103);
    __mac_tap(20);
    __mac_tap(-207);
    __mac_tap(-550);
    __mac_tap(-951);
    __mac_tap(-1327);
    __mac_tap(-1587);
    __mac_tap(-1645);
    __mac_tap(-1440);
    __mac_tap(-947);
    __mac_tap(-190);
    __mac_tap(765);
    __mac_tap(1810);
    __mac_tap(2818);
    __mac_tap(3656);
    __mac_tap(4210);
    __mac_tap(4404);
    __mac_tap(4210);
    __mac_tap(3656);
    __mac_tap(2818);
    __mac_tap(1810);
    __mac_tap(765);
    __mac_tap(-190);
    __mac_tap(-947);
    __mac_tap(-1440);
    __mac_tap(-1645);
    __mac_tap(-1587);
    __mac_tap(-1327);
    __mac_tap(-951);
    __mac_tap(-550);
    __mac_tap(-207);
    __mac_tap(20);
    __mac_tap(103);
    __mac_tap(48);
    __mac_tap(-113);
    __mac_tap(-329);
    __mac_tap(-545);
    __mac_tap(-711);
    __mac_tap(-794);
    __mac_tap(-782);
    __mac_tap(-683);
    __mac_tap(-525);
    __mac_tap(-343);
    __mac_tap(-176);
    __mac_tap(-55);
    __mac_tap(2);
    __mac_tap(-8);
    __mac_tap(-72);
    __mac_tap(-168);
    __mac_tap(-268);
    __mac_tap(-346);
    __mac_tap(-385);
    __mac_tap(-375);
    __mac_tap(-320);
    __mac_tap(-232);
    __mac_tap(-132);
    __mac_tap(-39);
    __mac_tap(30);
    __mac_tap(65);
    __mac_tap(63);
    __mac_tap(31);
    __mac_tap(-19);
    __mac_tap(-72);
    __mac_tap(-114);
    __mac_tap(-136);
    __mac_tap(-131);
    __mac_tap(-102);
    __mac_tap(-57);
    __mac_tap(-4);
    __mac_tap(44);
    __mac_tap(79);
    __mac_tap(95);
    __mac_tap(92);
    __mac_tap(73);
    __mac_tap(44);
    __mac_tap(14);
    __mac_tap(-11);
    __mac_tap(-24);
    __mac_tap(-25);
    __mac_tap(-13);
    __mac_tap(8);
    __mac_tap(31);
    __mac_tap(52);
    __mac_tap(67);
    __mac_tap(72);
    __mac_tap(68);
    __mac_tap(56);
    __mac_tap(40);
    __mac_tap(23);
    __mac_tap(10);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(3);
    __mac_tap(11);
    __mac_tap(19);
    __mac_tap(27);
    __mac_tap(32);
    __mac_tap(33);
    __mac_tap(30);
    __mac_tap(24);
    __mac_tap(16);
    __mac_tap(9);
    __mac_tap(3);
    __mac_tap(0);
    __mac_tap(-2);
    __mac_tap(-1);
    __mac_tap(2);
    __mac_tap(4);
    __mac_tap(7);
    __mac_tap(8);
    __mac_tap(8);
    __mac_tap(6);
    __mac_tap(5);
    __mac_tap(2);
    __mac_tap(1);
    __mac_tap(-1);
    __mac_tap(-1);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(bpf_300_2400_tx)(const int16_t sample)
  {
    // nominal 31250 sample rate
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(-1);
    __mac_tap(-1);
    __mac_tap(1);
    __mac_tap(2);
    __mac_tap(5);
    __mac_tap(6);
    __mac_tap(8);
    __mac_tap(8);
    __mac_tap(7);
    __mac_tap(4);
    __mac_tap(2);
    __mac_tap(-1);
    __mac_tap(-2);
    __mac_tap(0);
    __mac_tap(3);
    __mac_tap(9);
    __mac_tap(16);
    __mac_tap(24);
    __mac_tap(30);
    __mac_tap(33);
    __mac_tap(32);
    __mac_tap(27);
    __mac_tap(19);
    __mac_tap(11);
    __mac_tap(3);
    __mac_tap(0);
    __mac_tap(2);
    __mac_tap(10);
    __mac_tap(23);
    __mac_tap(40);
    __mac_tap(56);
    __mac_tap(68);
    __mac_tap(72);
    __mac_tap(67);
    __mac_tap(52);
    __mac_tap(31);
    __mac_tap(8);
    __mac_tap(-13);
    __mac_tap(-25);
    __mac_tap(-24);
    __mac_tap(-11);
    __mac_tap(14);
    __mac_tap(44);
    __mac_tap(73);
    __mac_tap(92);
    __mac_tap(95);
    __mac_tap(79);
    __mac_tap(44);
    __mac_tap(-4);
    __mac_tap(-57);
    __mac_tap(-102);
    __mac_tap(-131);
    __mac_tap(-136);
    __mac_tap(-114);
    __mac_tap(-72);
    __mac_tap(-19);
    __mac_tap(31);
    __mac_tap(63);
    __mac_tap(65);
    __mac_tap(30);
    __mac_tap(-39);
    __mac_tap(-132);
    __mac_tap(-232);
    __mac_tap(-320);
    __mac_tap(-375);
    __mac_tap(-385);
    __mac_tap(-346);
    __mac_tap(-268);
    __mac_tap(-168);
    __mac_tap(-72);
    __mac_tap(-8);
    __mac_tap(2);
    __mac_tap(-55);
    __mac_tap(-176);
    __mac_tap(-343);
    __mac_tap(-525);
    __mac_tap(-683);
    __mac_tap(-782);
    __mac_tap(-794);
    __mac_tap(-711);
    __mac_tap(-545);
    __mac_tap(-329);
    __mac_tap(-113);
    __mac_tap(48);
    __mac_tap(103);
    __mac_tap(20);
    __mac_tap(-207);
    __mac_tap(-550);
    __mac_tap(-951);
    __mac_tap(-1327);
    __mac_tap(-1587);
    __mac_tap(-1645);
    __mac_tap(-1440);
    __mac_tap(-947);
    __mac_tap(-190);
    __mac_tap(765);
    __mac_tap(1810);
    __mac_tap(2818);
    __mac_tap(3656);
    __mac_tap(4210);
    __mac_tap(4404);
    __mac_tap(4210);
    __mac_tap(3656);
    __mac_tap(2818);
    __mac_tap(1810);
    __mac_tap(765);
    __mac_tap(-190);
    __mac_tap(-947);
    __mac_tap(-1440);
    __mac_tap(-1645);
    __mac_tap(-1587);
    __mac_tap(-1327);
    __mac_tap(-951);
    __mac_tap(-550);
    __mac_tap(-207);
    __mac_tap(20);
    __mac_tap(103);
    __mac_tap(48);
    __mac_tap(-113);
    __mac_tap(-329);
    __mac_tap(-545);
    __mac_tap(-711);
    __mac_tap(-794);
    __mac_tap(-782);
    __mac_tap(-683);
    __mac_tap(-525);
    __mac_tap(-343);
    __mac_tap(-176);
    __mac_tap(-55);
    __mac_tap(2);
    __mac_tap(-8);
    __mac_tap(-72);
    __mac_tap(-168);
    __mac_tap(-268);
    __mac_tap(-346);
    __mac_tap(-385);
    __mac_tap(-375);
    __mac_tap(-320);
    __mac_tap(-232);
    __mac_tap(-132);
    __mac_tap(-39);
    __mac_tap(30);
    __mac_tap(65);
    __mac_tap(63);
    __mac_tap(31);
    __mac_tap(-19);
    __mac_tap(-72);
    __mac_tap(-114);
    __mac_tap(-136);
    __mac_tap(-131);
    __mac_tap(-102);
    __mac_tap(-57);
    __mac_tap(-4);
    __mac_tap(44);
    __mac_tap(79);
    __mac_tap(95);
    __mac_tap(92);
    __mac_tap(73);
    __mac_tap(44);
    __mac_tap(14);
    __mac_tap(-11);
    __mac_tap(-24);
    __mac_tap(-25);
    __mac_tap(-13);
    __mac_tap(8);
    __mac_tap(31);
    __mac_tap(52);
    __mac_tap(67);
    __mac_tap(72);
    __mac_tap(68);
    __mac_tap(56);
    __mac_tap(40);
    __mac_tap(23);
    __mac_tap(10);
    __mac_tap(2);
    __mac_tap(0);
    __mac_tap(3);
    __mac_tap(11);
    __mac_tap(19);
    __mac_tap(27);
    __mac_tap(32);
    __mac_tap(33);
    __mac_tap(30);
    __mac_tap(24);
    __mac_tap(16);
    __mac_tap(9);
    __mac_tap(3);
    __mac_tap(0);
    __mac_tap(-2);
    __mac_tap(-1);
    __mac_tap(2);
    __mac_tap(4);
    __mac_tap(7);
    __mac_tap(8);
    __mac_tap(8);
    __mac_tap(6);
    __mac_tap(5);
    __mac_tap(2);
    __mac_tap(1);
    __mac_tap(-1);
    __mac_tap(-1);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(lpf_fs4_rx)(const int16_t sample)
  {
    // 31250
    // Taps: 199 (computationally 100 since cutoff is Fs/4)
    // Att: 45 (60dB+)
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(0);
    __mac_tap(-10);
    __mac_tap(0);
    __mac_tap(12);
    __mac_tap(0);
    __mac_tap(-14);
    __mac_tap(0);
    __mac_tap(16);
    __mac_tap(0);
    __mac_tap(-19);
    __mac_tap(0);
    __mac_tap(21);
    __mac_tap(0);
    __mac_tap(-24);
    __mac_tap(0);
    __mac_tap(27);
    __mac_tap(0);
    __mac_tap(-30);
    __mac_tap(0);
    __mac_tap(34);
    __mac_tap(0);
    __mac_tap(-37);
    __mac_tap(0);
    __mac_tap(41);
    __mac_tap(0);
    __mac_tap(-46);
    __mac_tap(0);
    __mac_tap(50);
    __mac_tap(0);
    __mac_tap(-55);
    __mac_tap(0);
    __mac_tap(60);
    __mac_tap(0);
    __mac_tap(-66);
    __mac_tap(0);
    __mac_tap(72);
    __mac_tap(0);
    __mac_tap(-78);
    __mac_tap(0);
    __mac_tap(85);
    __mac_tap(0);
    __mac_tap(-93);
    __mac_tap(0);
    __mac_tap(100);
    __mac_tap(0);
    __mac_tap(-109);
    __mac_tap(0);
    __mac_tap(118);
    __mac_tap(0);
    __mac_tap(-127);
    __mac_tap(0);
    __mac_tap(138);
    __mac_tap(0);
    __mac_tap(-149);
    __mac_tap(0);
    __mac_tap(161);
    __mac_tap(0);
    __mac_tap(-174);
    __mac_tap(0);
    __mac_tap(189);
    __mac_tap(0);
    __mac_tap(-204);
    __mac_tap(0);
    __mac_tap(221);
    __mac_tap(0);
    __mac_tap(-240);
    __mac_tap(0);
    __mac_tap(261);
    __mac_tap(0);
    __mac_tap(-284);
    __mac_tap(0);
    __mac_tap(311);
    __mac_tap(0);
    __mac_tap(-340);
    __mac_tap(0);
    __mac_tap(374);
    __mac_tap(0);
    __mac_tap(-414);
    __mac_tap(0);
    __mac_tap(460);
    __mac_tap(0);
    __mac_tap(-516);
    __mac_tap(0);
    __mac_tap(584);
    __mac_tap(0);
    __mac_tap(-669);
    __mac_tap(0);
    __mac_tap(779);
    __mac_tap(0);
    __mac_tap(-929);
    __mac_tap(0);
    __mac_tap(1143);
    __mac_tap(0);
    __mac_tap(-1478);
    __mac_tap(0);
    __mac_tap(2077);
    __mac_tap(0);
    __mac_tap(-3471);
    __mac_tap(0);
    __mac_tap(10429);
    __mac_tap(16384);
    __mac_tap(10429);
    __mac_tap(0);
    __mac_tap(-3471);
    __mac_tap(0);
    __mac_tap(2077);
    __mac_tap(0);
    __mac_tap(-1478);
    __mac_tap(0);
    __mac_tap(1143);
    __mac_tap(0);
    __mac_tap(-929);
    __mac_tap(0);
    __mac_tap(779);
    __mac_tap(0);
    __mac_tap(-669);
    __mac_tap(0);
    __mac_tap(584);
    __mac_tap(0);
    __mac_tap(-516);
    __mac_tap(0);
    __mac_tap(460);
    __mac_tap(0);
    __mac_tap(-414);
    __mac_tap(0);
    __mac_tap(374);
    __mac_tap(0);
    __mac_tap(-340);
    __mac_tap(0);
    __mac_tap(311);
    __mac_tap(0);
    __mac_tap(-284);
    __mac_tap(0);
    __mac_tap(261);
    __mac_tap(0);
    __mac_tap(-240);
    __mac_tap(0);
    __mac_tap(221);
    __mac_tap(0);
    __mac_tap(-204);
    __mac_tap(0);
    __mac_tap(189);
    __mac_tap(0);
    __mac_tap(-174);
    __mac_tap(0);
    __mac_tap(161);
    __mac_tap(0);
    __mac_tap(-149);
    __mac_tap(0);
    __mac_tap(138);
    __mac_tap(0);
    __mac_tap(-127);
    __mac_tap(0);
    __mac_tap(118);
    __mac_tap(0);
    __mac_tap(-109);
    __mac_tap(0);
    __mac_tap(100);
    __mac_tap(0);
    __mac_tap(-93);
    __mac_tap(0);
    __mac_tap(85);
    __mac_tap(0);
    __mac_tap(-78);
    __mac_tap(0);
    __mac_tap(72);
    __mac_tap(0);
    __mac_tap(-66);
    __mac_tap(0);
    __mac_tap(60);
    __mac_tap(0);
    __mac_tap(-55);
    __mac_tap(0);
    __mac_tap(50);
    __mac_tap(0);
    __mac_tap(-46);
    __mac_tap(0);
    __mac_tap(41);
    __mac_tap(0);
    __mac_tap(-37);
    __mac_tap(0);
    __mac_tap(34);
    __mac_tap(0);
    __mac_tap(-30);
    __mac_tap(0);
    __mac_tap(27);
    __mac_tap(0);
    __mac_tap(-24);
    __mac_tap(0);
    __mac_tap(21);
    __mac_tap(0);
    __mac_tap(-19);
    __mac_tap(0);
    __mac_tap(16);
    __mac_tap(0);
    __mac_tap(-14);
    __mac_tap(0);
    __mac_tap(12);
    __mac_tap(0);
    __mac_tap(-10);
    __mac_tap(0);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(lpf_fs4_tx)(const int16_t sample)
  {
    // 31250
    // Taps: 199 (computationally 100 since cutoff is Fs/4)
    // Att: 45 (60dB+)
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(0);
    __mac_tap(-10);
    __mac_tap(0);
    __mac_tap(12);
    __mac_tap(0);
    __mac_tap(-14);
    __mac_tap(0);
    __mac_tap(16);
    __mac_tap(0);
    __mac_tap(-19);
    __mac_tap(0);
    __mac_tap(21);
    __mac_tap(0);
    __mac_tap(-24);
    __mac_tap(0);
    __mac_tap(27);
    __mac_tap(0);
    __mac_tap(-30);
    __mac_tap(0);
    __mac_tap(34);
    __mac_tap(0);
    __mac_tap(-37);
    __mac_tap(0);
    __mac_tap(41);
    __mac_tap(0);
    __mac_tap(-46);
    __mac_tap(0);
    __mac_tap(50);
    __mac_tap(0);
    __mac_tap(-55);
    __mac_tap(0);
    __mac_tap(60);
    __mac_tap(0);
    __mac_tap(-66);
    __mac_tap(0);
    __mac_tap(72);
    __mac_tap(0);
    __mac_tap(-78);
    __mac_tap(0);
    __mac_tap(85);
    __mac_tap(0);
    __mac_tap(-93);
    __mac_tap(0);
    __mac_tap(100);
    __mac_tap(0);
    __mac_tap(-109);
    __mac_tap(0);
    __mac_tap(118);
    __mac_tap(0);
    __mac_tap(-127);
    __mac_tap(0);
    __mac_tap(138);
    __mac_tap(0);
    __mac_tap(-149);
    __mac_tap(0);
    __mac_tap(161);
    __mac_tap(0);
    __mac_tap(-174);
    __mac_tap(0);
    __mac_tap(189);
    __mac_tap(0);
    __mac_tap(-204);
    __mac_tap(0);
    __mac_tap(221);
    __mac_tap(0);
    __mac_tap(-240);
    __mac_tap(0);
    __mac_tap(261);
    __mac_tap(0);
    __mac_tap(-284);
    __mac_tap(0);
    __mac_tap(311);
    __mac_tap(0);
    __mac_tap(-340);
    __mac_tap(0);
    __mac_tap(374);
    __mac_tap(0);
    __mac_tap(-414);
    __mac_tap(0);
    __mac_tap(460);
    __mac_tap(0);
    __mac_tap(-516);
    __mac_tap(0);
    __mac_tap(584);
    __mac_tap(0);
    __mac_tap(-669);
    __mac_tap(0);
    __mac_tap(779);
    __mac_tap(0);
    __mac_tap(-929);
    __mac_tap(0);
    __mac_tap(1143);
    __mac_tap(0);
    __mac_tap(-1478);
    __mac_tap(0);
    __mac_tap(2077);
    __mac_tap(0);
    __mac_tap(-3471);
    __mac_tap(0);
    __mac_tap(10429);
    __mac_tap(16384);
    __mac_tap(10429);
    __mac_tap(0);
    __mac_tap(-3471);
    __mac_tap(0);
    __mac_tap(2077);
    __mac_tap(0);
    __mac_tap(-1478);
    __mac_tap(0);
    __mac_tap(1143);
    __mac_tap(0);
    __mac_tap(-929);
    __mac_tap(0);
    __mac_tap(779);
    __mac_tap(0);
    __mac_tap(-669);
    __mac_tap(0);
    __mac_tap(584);
    __mac_tap(0);
    __mac_tap(-516);
    __mac_tap(0);
    __mac_tap(460);
    __mac_tap(0);
    __mac_tap(-414);
    __mac_tap(0);
    __mac_tap(374);
    __mac_tap(0);
    __mac_tap(-340);
    __mac_tap(0);
    __mac_tap(311);
    __mac_tap(0);
    __mac_tap(-284);
    __mac_tap(0);
    __mac_tap(261);
    __mac_tap(0);
    __mac_tap(-240);
    __mac_tap(0);
    __mac_tap(221);
    __mac_tap(0);
    __mac_tap(-204);
    __mac_tap(0);
    __mac_tap(189);
    __mac_tap(0);
    __mac_tap(-174);
    __mac_tap(0);
    __mac_tap(161);
    __mac_tap(0);
    __mac_tap(-149);
    __mac_tap(0);
    __mac_tap(138);
    __mac_tap(0);
    __mac_tap(-127);
    __mac_tap(0);
    __mac_tap(118);
    __mac_tap(0);
    __mac_tap(-109);
    __mac_tap(0);
    __mac_tap(100);
    __mac_tap(0);
    __mac_tap(-93);
    __mac_tap(0);
    __mac_tap(85);
    __mac_tap(0);
    __mac_tap(-78);
    __mac_tap(0);
    __mac_tap(72);
    __mac_tap(0);
    __mac_tap(-66);
    __mac_tap(0);
    __mac_tap(60);
    __mac_tap(0);
    __mac_tap(-55);
    __mac_tap(0);
    __mac_tap(50);
    __mac_tap(0);
    __mac_tap(-46);
    __mac_tap(0);
    __mac_tap(41);
    __mac_tap(0);
    __mac_tap(-37);
    __mac_tap(0);
    __mac_tap(34);
    __mac_tap(0);
    __mac_tap(-30);
    __mac_tap(0);
    __mac_tap(27);
    __mac_tap(0);
    __mac_tap(-24);
    __mac_tap(0);
    __mac_tap(21);
    __mac_tap(0);
    __mac_tap(-19);
    __mac_tap(0);
    __mac_tap(16);
    __mac_tap(0);
    __mac_tap(-14);
    __mac_tap(0);
    __mac_tap(12);
    __mac_tap(0);
    __mac_tap(-10);
    __mac_tap(0);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(hpf_fs4_rx)(const int16_t sample)
  {
    // 31250
    // Taps: 199 (computationally 100 since cutoff is Fs/4)
    // Att: 45 (60dB+)
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(0);
    __mac_tap(10);
    __mac_tap(0);
    __mac_tap(-12);
    __mac_tap(0);
    __mac_tap(14);
    __mac_tap(0);
    __mac_tap(-16);
    __mac_tap(0);
    __mac_tap(19);
    __mac_tap(0);
    __mac_tap(-21);
    __mac_tap(0);
    __mac_tap(24);
    __mac_tap(0);
    __mac_tap(-27);
    __mac_tap(0);
    __mac_tap(30);
    __mac_tap(0);
    __mac_tap(-34);
    __mac_tap(0);
    __mac_tap(37);
    __mac_tap(0);
    __mac_tap(-41);
    __mac_tap(0);
    __mac_tap(46);
    __mac_tap(0);
    __mac_tap(-50);
    __mac_tap(0);
    __mac_tap(55);
    __mac_tap(0);
    __mac_tap(-60);
    __mac_tap(0);
    __mac_tap(66);
    __mac_tap(0);
    __mac_tap(-72);
    __mac_tap(0);
    __mac_tap(78);
    __mac_tap(0);
    __mac_tap(-85);
    __mac_tap(0);
    __mac_tap(93);
    __mac_tap(0);
    __mac_tap(-100);
    __mac_tap(0);
    __mac_tap(109);
    __mac_tap(0);
    __mac_tap(-118);
    __mac_tap(0);
    __mac_tap(127);
    __mac_tap(0);
    __mac_tap(-138);
    __mac_tap(0);
    __mac_tap(149);
    __mac_tap(0);
    __mac_tap(-161);
    __mac_tap(0);
    __mac_tap(174);
    __mac_tap(0);
    __mac_tap(-189);
    __mac_tap(0);
    __mac_tap(204);
    __mac_tap(0);
    __mac_tap(-221);
    __mac_tap(0);
    __mac_tap(240);
    __mac_tap(0);
    __mac_tap(-261);
    __mac_tap(0);
    __mac_tap(284);
    __mac_tap(0);
    __mac_tap(-311);
    __mac_tap(0);
    __mac_tap(340);
    __mac_tap(0);
    __mac_tap(-374);
    __mac_tap(0);
    __mac_tap(414);
    __mac_tap(0);
    __mac_tap(-460);
    __mac_tap(0);
    __mac_tap(516);
    __mac_tap(0);
    __mac_tap(-584);
    __mac_tap(0);
    __mac_tap(669);
    __mac_tap(0);
    __mac_tap(-779);
    __mac_tap(0);
    __mac_tap(929);
    __mac_tap(0);
    __mac_tap(-1143);
    __mac_tap(0);
    __mac_tap(1478);
    __mac_tap(0);
    __mac_tap(-2077);
    __mac_tap(0);
    __mac_tap(3471);
    __mac_tap(0);
    __mac_tap(-10429);
    __mac_tap(16384);
    __mac_tap(-10429);
    __mac_tap(0);
    __mac_tap(3471);
    __mac_tap(0);
    __mac_tap(-2077);
    __mac_tap(0);
    __mac_tap(1478);
    __mac_tap(0);
    __mac_tap(-1143);
    __mac_tap(0);
    __mac_tap(929);
    __mac_tap(0);
    __mac_tap(-779);
    __mac_tap(0);
    __mac_tap(669);
    __mac_tap(0);
    __mac_tap(-584);
    __mac_tap(0);
    __mac_tap(516);
    __mac_tap(0);
    __mac_tap(-460);
    __mac_tap(0);
    __mac_tap(414);
    __mac_tap(0);
    __mac_tap(-374);
    __mac_tap(0);
    __mac_tap(340);
    __mac_tap(0);
    __mac_tap(-311);
    __mac_tap(0);
    __mac_tap(284);
    __mac_tap(0);
    __mac_tap(-261);
    __mac_tap(0);
    __mac_tap(240);
    __mac_tap(0);
    __mac_tap(-221);
    __mac_tap(0);
    __mac_tap(204);
    __mac_tap(0);
    __mac_tap(-189);
    __mac_tap(0);
    __mac_tap(174);
    __mac_tap(0);
    __mac_tap(-161);
    __mac_tap(0);
    __mac_tap(149);
    __mac_tap(0);
    __mac_tap(-138);
    __mac_tap(0);
    __mac_tap(127);
    __mac_tap(0);
    __mac_tap(-118);
    __mac_tap(0);
    __mac_tap(109);
    __mac_tap(0);
    __mac_tap(-100);
    __mac_tap(0);
    __mac_tap(93);
    __mac_tap(0);
    __mac_tap(-85);
    __mac_tap(0);
    __mac_tap(78);
    __mac_tap(0);
    __mac_tap(-72);
    __mac_tap(0);
    __mac_tap(66);
    __mac_tap(0);
    __mac_tap(-60);
    __mac_tap(0);
    __mac_tap(55);
    __mac_tap(0);
    __mac_tap(-50);
    __mac_tap(0);
    __mac_tap(46);
    __mac_tap(0);
    __mac_tap(-41);
    __mac_tap(0);
    __mac_tap(37);
    __mac_tap(0);
    __mac_tap(-34);
    __mac_tap(0);
    __mac_tap(30);
    __mac_tap(0);
    __mac_tap(-27);
    __mac_tap(0);
    __mac_tap(24);
    __mac_tap(0);
    __mac_tap(-21);
    __mac_tap(0);
    __mac_tap(19);
    __mac_tap(0);
    __mac_tap(-16);
    __mac_tap(0);
    __mac_tap(14);
    __mac_tap(0);
    __mac_tap(-12);
    __mac_tap(0);
    __mac_tap(10);
    __mac_tap(0);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(hpf_fs4_tx)(const int16_t sample)
  {
    // 31250
    // Taps: 199 (computationally 100 since cutoff is Fs/4)
    // Att: 45 (60dB+)
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(0);
    __mac_tap(10);
    __mac_tap(0);
    __mac_tap(-12);
    __mac_tap(0);
    __mac_tap(14);
    __mac_tap(0);
    __mac_tap(-16);
    __mac_tap(0);
    __mac_tap(19);
    __mac_tap(0);
    __mac_tap(-21);
    __mac_tap(0);
    __mac_tap(24);
    __mac_tap(0);
    __mac_tap(-27);
    __mac_tap(0);
    __mac_tap(30);
    __mac_tap(0);
    __mac_tap(-34);
    __mac_tap(0);
    __mac_tap(37);
    __mac_tap(0);
    __mac_tap(-41);
    __mac_tap(0);
    __mac_tap(46);
    __mac_tap(0);
    __mac_tap(-50);
    __mac_tap(0);
    __mac_tap(55);
    __mac_tap(0);
    __mac_tap(-60);
    __mac_tap(0);
    __mac_tap(66);
    __mac_tap(0);
    __mac_tap(-72);
    __mac_tap(0);
    __mac_tap(78);
    __mac_tap(0);
    __mac_tap(-85);
    __mac_tap(0);
    __mac_tap(93);
    __mac_tap(0);
    __mac_tap(-100);
    __mac_tap(0);
    __mac_tap(109);
    __mac_tap(0);
    __mac_tap(-118);
    __mac_tap(0);
    __mac_tap(127);
    __mac_tap(0);
    __mac_tap(-138);
    __mac_tap(0);
    __mac_tap(149);
    __mac_tap(0);
    __mac_tap(-161);
    __mac_tap(0);
    __mac_tap(174);
    __mac_tap(0);
    __mac_tap(-189);
    __mac_tap(0);
    __mac_tap(204);
    __mac_tap(0);
    __mac_tap(-221);
    __mac_tap(0);
    __mac_tap(240);
    __mac_tap(0);
    __mac_tap(-261);
    __mac_tap(0);
    __mac_tap(284);
    __mac_tap(0);
    __mac_tap(-311);
    __mac_tap(0);
    __mac_tap(340);
    __mac_tap(0);
    __mac_tap(-374);
    __mac_tap(0);
    __mac_tap(414);
    __mac_tap(0);
    __mac_tap(-460);
    __mac_tap(0);
    __mac_tap(516);
    __mac_tap(0);
    __mac_tap(-584);
    __mac_tap(0);
    __mac_tap(669);
    __mac_tap(0);
    __mac_tap(-779);
    __mac_tap(0);
    __mac_tap(929);
    __mac_tap(0);
    __mac_tap(-1143);
    __mac_tap(0);
    __mac_tap(1478);
    __mac_tap(0);
    __mac_tap(-2077);
    __mac_tap(0);
    __mac_tap(3471);
    __mac_tap(0);
    __mac_tap(-10429);
    __mac_tap(16384);
    __mac_tap(-10429);
    __mac_tap(0);
    __mac_tap(3471);
    __mac_tap(0);
    __mac_tap(-2077);
    __mac_tap(0);
    __mac_tap(1478);
    __mac_tap(0);
    __mac_tap(-1143);
    __mac_tap(0);
    __mac_tap(929);
    __mac_tap(0);
    __mac_tap(-779);
    __mac_tap(0);
    __mac_tap(669);
    __mac_tap(0);
    __mac_tap(-584);
    __mac_tap(0);
    __mac_tap(516);
    __mac_tap(0);
    __mac_tap(-460);
    __mac_tap(0);
    __mac_tap(414);
    __mac_tap(0);
    __mac_tap(-374);
    __mac_tap(0);
    __mac_tap(340);
    __mac_tap(0);
    __mac_tap(-311);
    __mac_tap(0);
    __mac_tap(284);
    __mac_tap(0);
    __mac_tap(-261);
    __mac_tap(0);
    __mac_tap(240);
    __mac_tap(0);
    __mac_tap(-221);
    __mac_tap(0);
    __mac_tap(204);
    __mac_tap(0);
    __mac_tap(-189);
    __mac_tap(0);
    __mac_tap(174);
    __mac_tap(0);
    __mac_tap(-161);
    __mac_tap(0);
    __mac_tap(149);
    __mac_tap(0);
    __mac_tap(-138);
    __mac_tap(0);
    __mac_tap(127);
    __mac_tap(0);
    __mac_tap(-118);
    __mac_tap(0);
    __mac_tap(109);
    __mac_tap(0);
    __mac_tap(-100);
    __mac_tap(0);
    __mac_tap(93);
    __mac_tap(0);
    __mac_tap(-85);
    __mac_tap(0);
    __mac_tap(78);
    __mac_tap(0);
    __mac_tap(-72);
    __mac_tap(0);
    __mac_tap(66);
    __mac_tap(0);
    __mac_tap(-60);
    __mac_tap(0);
    __mac_tap(55);
    __mac_tap(0);
    __mac_tap(-50);
    __mac_tap(0);
    __mac_tap(46);
    __mac_tap(0);
    __mac_tap(-41);
    __mac_tap(0);
    __mac_tap(37);
    __mac_tap(0);
    __mac_tap(-34);
    __mac_tap(0);
    __mac_tap(30);
    __mac_tap(0);
    __mac_tap(-27);
    __mac_tap(0);
    __mac_tap(24);
    __mac_tap(0);
    __mac_tap(-21);
    __mac_tap(0);
    __mac_tap(19);
    __mac_tap(0);
    __mac_tap(-16);
    __mac_tap(0);
    __mac_tap(14);
    __mac_tap(0);
    __mac_tap(-12);
    __mac_tap(0);
    __mac_tap(10);
    __mac_tap(0);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(hpf_fs8_rx)(const int16_t sample)
  {
    // 31250
    // Taps: 57 (computationally 42 since cutoff is Fs/8)
    // Att: 60dB
    static int32_t x[FIR_LENGTH] = { 0 };
    static uint8_t sample_index = 0;
    uint8_t i = sample_index;
    x[sample_index--] = sample;
    int32_t acc = 0;
    __mac_tap(0);
    __mac_tap(-9);
    __mac_tap(-20);
    __mac_tap(-21);
    __mac_tap(0);
    __mac_tap(38);
    __mac_tap(71);
    __mac_tap(65);
    __mac_tap(0);
    __mac_tap(-102);
    __mac_tap(-178);
    __mac_tap(-154);
    __mac_tap(0);
    __mac_tap(223);
    __mac_tap(377);
    __mac_tap(317);
    __mac_tap(0);
    __mac_tap(-445);
    __mac_tap(-745);
    __mac_tap(-625);
    __mac_tap(0);
    __mac_tap(896);
    __mac_tap(1544);
    __mac_tap(1359);
    __mac_tap(0);
    __mac_tap(-2387);
    __mac_tap(-5147);
    __mac_tap(-7351);
    __mac_tap(24576);
    __mac_tap(-7351);
    __mac_tap(-5147);
    __mac_tap(-2387);
    __mac_tap(0);
    __mac_tap(1359);
    __mac_tap(1544);
    __mac_tap(896);
    __mac_tap(0);
    __mac_tap(-625);
    __mac_tap(-745);
    __mac_tap(-445);
    __mac_tap(0);
    __mac_tap(317);
    __mac_tap(377);
    __mac_tap(223);
    __mac_tap(0);
    __mac_tap(-154);
    __mac_tap(-178);
    __mac_tap(-102);
    __mac_tap(0);
    __mac_tap(65);
    __mac_tap(71);
    __mac_tap(38);
    __mac_tap(0);
    __mac_tap(-21);
    __mac_tap(-20);
    __mac_tap(-9);
    __mac_tap(0);
    return (int16_t)(acc >> 15);
  }

  static const int16_t __not_in_flash_func(maf1)(const int16_t v)
  {
    static int16_t element[MOVING_AVERAGE_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (MOVING_AVERAGE_LENGTH-1);
    return sum/MOVING_AVERAGE_LENGTH;
  }

  static const int16_t __not_in_flash_func(maf2)(const int16_t v)
  {
    static int16_t element[MOVING_AVERAGE_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (MOVING_AVERAGE_LENGTH-1);
    return sum/MOVING_AVERAGE_LENGTH;
  }

  static const int16_t __not_in_flash_func(maf3)(const int16_t v)
  {
    static int16_t element[MOVING_AVERAGE_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (MOVING_AVERAGE_LENGTH-1);
    return sum/MOVING_AVERAGE_LENGTH;
  }

  static const int16_t __not_in_flash_func(maf4)(const int16_t v)
  {
    static int16_t element[MOVING_AVERAGE_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (MOVING_AVERAGE_LENGTH-1);
    return sum/MOVING_AVERAGE_LENGTH;
  }

  static const int16_t __not_in_flash_func(ma_order_2)(const int16_t v)
  {
    return maf2(maf1(v));
  }

  static const int16_t __not_in_flash_func(ma_order_4)(const int16_t v)
  {
    return maf4(maf3(maf2(maf1(v))));
  }

  static const int16_t __not_in_flash_func(dc)(const int16_t in)
  {
    static int32_t s = 0;
    static int32_t x1 = 0;
    static int16_t y1 = 0;
    s -= x1;
    x1 = (int32_t)in << 16;
    s += x1 - ((int32_t)y1 << 8);
    return (y1 = s >> 16);
  }

  static const int16_t __not_in_flash_func(jnr_maf1)(const int16_t v)
  {
    static int16_t element[JNR_FILTER_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (JNR_FILTER_LENGTH-1);
    return sum/JNR_FILTER_LENGTH;
  }

  static const int16_t __not_in_flash_func(jnr_maf2)(const int16_t v)
  {
    static int16_t element[JNR_FILTER_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (JNR_FILTER_LENGTH-1);
    return sum/JNR_FILTER_LENGTH;
  }

  static const int16_t __not_in_flash_func(jnr_maf3)(const int16_t v)
  {
    static int16_t element[JNR_FILTER_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (JNR_FILTER_LENGTH-1);
    return sum/JNR_FILTER_LENGTH;
  }

  static const int16_t __not_in_flash_func(jnr_maf4)(const int16_t v)
  {
    static int16_t element[JNR_FILTER_LENGTH] = {0};
    static uint8_t p = 0;
    static int32_t sum = 0;
    sum = sum - element[p] + v;
    element[p++] = v;
    p &= (JNR_FILTER_LENGTH-1);
    return sum/JNR_FILTER_LENGTH;
  }
}

#endif